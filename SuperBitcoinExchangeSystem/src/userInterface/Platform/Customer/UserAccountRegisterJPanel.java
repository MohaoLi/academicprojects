/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.Platform.Customer;

import java.util.Properties;
import javax.mail.*;
import Business.Customer.Customer;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Enterprise.MinerEnterprise;
import Business.Network.Network;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import Business.Enterprise.PlatformEnterprise;
import Business.Organization.Miner.MiningOrganization;
import Business.Organization.Organization;
import Business.Role.Platform.CustomerRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.Random;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JButton;

/**
 *
 * @author Lei
 */
public class UserAccountRegisterJPanel extends javax.swing.JPanel {

    /**
     * Creates new form UserAccountRegisterJPanel
     */
    JPanel container;
    EcoSystem system;
    JPanel loginJPanel;
    String verificationCode;

    public UserAccountRegisterJPanel(JPanel container, EcoSystem system, JPanel loginJPanel) {
        initComponents();
        this.container = container;
        this.system = system;
        this.loginJPanel = loginJPanel;
        mineridJTextField.setEnabled(false);
        populateNetworkComboBox();
    }

    private void populateNetworkComboBox() {
        networkJComboBox.removeAllItems();

        for (Network network : system.getNetworkList()) {
            networkJComboBox.addItem(network);
        }
    }

    private void populateEnterpriseComboBox(Network network) {
        enterpriseJComboBox.removeAllItems();

        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            if (enterprise instanceof PlatformEnterprise) {
                enterpriseJComboBox.addItem(enterprise);
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        minerJCheckBox = new javax.swing.JCheckBox();
        mineridJTextField = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        createJButton = new javax.swing.JButton();
        PasswordField = new javax.swing.JPasswordField();
        jLabel8 = new javax.swing.JLabel();
        bankAccountJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        networkJComboBox = new javax.swing.JComboBox();
        enterpriseJComboBox = new javax.swing.JComboBox();
        usernameTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtVerificationCode = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        btnMail = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setText("User Account Registeration");

        jLabel2.setText("Name");

        jLabel5.setText("User Name");

        jLabel6.setText("Password");

        minerJCheckBox.setText("Already a Miner");
        minerJCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minerJCheckBoxActionPerformed(evt);
            }
        });

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("Person ID");

        createJButton.setText("Create");
        createJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createJButtonActionPerformed(evt);
            }
        });

        jLabel8.setText("Bank Account");

        jLabel3.setText("Platform");

        jLabel4.setText("NetWork");

        networkJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        networkJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkJComboBoxActionPerformed(evt);
            }
        });

        enterpriseJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel9.setText("E-mail");

        jLabel10.setText("Verification Code");

        btnMail.setText("Mail");
        btnMail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(createJButton)
                .addGap(405, 405, 405))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(250, 250, 250)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jLabel9))))
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usernameTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(networkJComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 315, Short.MAX_VALUE)
                            .addComponent(nameJTextField)
                            .addComponent(mineridJTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PasswordField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bankAccountJTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(enterpriseJComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtVerificationCode, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(minerJCheckBox)
                            .addComponent(btnMail)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(362, 362, 362)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(backJButton)))
                .addContainerGap(135, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(networkJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterpriseJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bankAccountJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mineridJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(minerJCheckBox))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(btnMail))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtVerificationCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addComponent(createJButton)
                .addGap(26, 26, 26)
                .addComponent(backJButton)
                .addGap(103, 103, 103))
        );
    }// </editor-fold>//GEN-END:initComponents

    public static boolean isNumeric(String str) {
        for (int i = 0; i < str.length(); i++) {
            //System.out.println(str.charAt(i));
            if (!Character.isDigit(str.charAt(i))) {
                return false;
            }
        }
        return true;
    }
    
    private void createJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createJButtonActionPerformed
        // TODO add your handling code here:
        if(nameJTextField.getText().trim().equals("") || usernameTextField.getText().trim().equals("") || PasswordField.getText().trim().equals("")
                || bankAccountJTextField.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null, "Please fill all blanks first.");
            return;
        }else if(!nameJTextField.getText().matches("^[A-Za-z]+$")){
            JOptionPane.showMessageDialog(null, "Please input your correct name","Warning",JOptionPane.WARNING_MESSAGE);
            return;
        } 
        else if (!isNumeric(bankAccountJTextField.getText().trim())){
            JOptionPane.showMessageDialog(null, "Please input a correct bank account.");
            return;
        } else if(Integer.parseInt(bankAccountJTextField.getText().trim()) <= 0){
            JOptionPane.showMessageDialog(null, "Please input a correct bank account.");
            return;
        }
        if (txtVerificationCode.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Please get a verification code first.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else if (!txtVerificationCode.getText().trim().equalsIgnoreCase(verificationCode)) {
            JOptionPane.showMessageDialog(null, "Your verification code is not valid, please try again.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if(minerJCheckBox.isSelected()){
            if(!isNumeric(mineridJTextField.getText().trim()) || mineridJTextField.getText().trim().equals("")){
                JOptionPane.showMessageDialog(null, "Because you're miner, please input your miner Id.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
            }
        }
        Network network = (Network) networkJComboBox.getSelectedItem();
        PlatformEnterprise platformEnterprise = (PlatformEnterprise) enterpriseJComboBox.getSelectedItem();
        String name = nameJTextField.getText();
        String loginpass = String.valueOf(PasswordField.getPassword());
        String username = usernameTextField.getText();
        int bankaccount = Integer.parseInt(bankAccountJTextField.getText());
        int id = 0;
        try {
            id = Integer.parseInt(mineridJTextField.getText());
        } catch (Exception e) {
        }

        if (!system.checkIfUserNameIsUnique(username)) {
            JOptionPane.showMessageDialog(null, "The Username has already existed");
            return;
        } else {
            if (minerJCheckBox.isSelected() == false) {
                Customer customer = platformEnterprise.getCustomerDirectory().createCustomer(name);
                customer.setBankAccount(bankaccount);
                UserAccount userAccount = platformEnterprise.getCustomerUserAccountDirectory().createUserAccount(username, loginpass, customer, new CustomerRole());
                JOptionPane.showMessageDialog(null, "Successfully Created");
            } else {
                for (UserAccount userAccount : platformEnterprise.getCustomerUserAccountDirectory().getUserAccountList()) {
                    if (userAccount.getPerson() instanceof Employee && userAccount.getPerson().getId() == id) {
                        JOptionPane.showMessageDialog(null, "You have already used this id");
                        return;
                    }
                }
                Employee employee_cus = null;
                for (Network a : system.getNetworkList()) {
                    for (Enterprise enterprise : a.getEnterpriseDirectory().getEnterpriseList()) {
                        if (enterprise instanceof MinerEnterprise) {
                            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                                if (organization instanceof MiningOrganization) {
                                    for (Employee employee : organization.getEmployeeDirectory().getEmployeeList()) {
                                        if (employee.getId() == id) {
                                            employee_cus = employee;
                                            break;
                                        }
                                    }
                                }
                                if (employee_cus != null) {
                                    break;
                                }
                            }
                        }
                        if (employee_cus != null) {
                            break;
                        }
                    }
                    if (employee_cus != null) {
                        break;
                    }
                }
                if (employee_cus == null) {
                    JOptionPane.showMessageDialog(null, "there is no such id in Mining Organization");
                    return;
                } else {
                    employee_cus.setBankAccount(bankaccount);
                    UserAccount userAccount = platformEnterprise.getCustomerUserAccountDirectory().createUserAccount(username, loginpass, employee_cus, new CustomerRole());
                    JOptionPane.showMessageDialog(null, "Create Successfully");
                }
            }
        }
    }//GEN-LAST:event_createJButtonActionPerformed

    private void minerJCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minerJCheckBoxActionPerformed
        // TODO add your handling code here:
        if (minerJCheckBox.isSelected() == true) {
            mineridJTextField.setEnabled(true);
        } else {
            mineridJTextField.setEnabled(false);
        }
    }//GEN-LAST:event_minerJCheckBoxActionPerformed

    private void networkJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkJComboBoxActionPerformed

        Network network = (Network) networkJComboBox.getSelectedItem();
        if (network != null) {
            populateEnterpriseComboBox(network);
        }
    }//GEN-LAST:event_networkJComboBoxActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        JButton a = (JButton) loginJPanel.getComponent(3);
        a.setEnabled(true);
        JButton b = (JButton) loginJPanel.getComponent(0);
        b.setEnabled(true);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void btnMailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMailActionPerformed
        // TODO add your handling code here:
        //pw7879330@gmail.com pfw123456
        Properties props = new Properties();
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.socketFactory.port", "465");
        props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.port", "465");

        Session session = Session.getDefaultInstance(props,
                new javax.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication("pw7879330@gmail.com", "pfw123456");
            }
        }
        );

        try {
            if (txtEmail.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(null, "Please enter a email address first.", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            } else if (!checkEmail(txtEmail.getText().trim())) {
                JOptionPane.showMessageDialog(null, "Please enter a valid email address.", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress("pw7879330@gmail.com"));
            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(txtEmail.getText()));
            message.setSubject("Verification Code");
            verificationCode = getRandomString();
            message.setText("Your verification code is " + verificationCode + ".");
            Transport.send(message);
            JOptionPane.showMessageDialog(null, "Mail sent");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnMailActionPerformed

    public static boolean checkEmail(String email) {
        // 验证邮箱的正则表达式 
        String format = "\\p{Alpha}\\w{2,15}[@][a-z0-9]{3,}[.]\\p{Lower}{2,}";
        //p{Alpha}:内容是必选的，和字母字符[\p{Lower}\p{Upper}]等价。如：200896@163.com不是合法的。
        //w{2,15}: 2~15个[a-zA-Z_0-9]字符；w{}内容是必选的。 如：dyh@152.com是合法的。
        //[a-z0-9]{3,}：至少三个[a-z0-9]字符,[]内的是必选的；如：dyh200896@16.com是不合法的。
        //[.]:'.'号时必选的； 如：dyh200896@163com是不合法的。
        //p{Lower}{2,}小写字母，两个以上。如：dyh200896@163.c是不合法的。
        if (email.matches(format)) {
            return true;// 邮箱名合法，返回true 
        } else {
            return false;// 邮箱名不合法，返回false
        }
    }

    private static String getRandomString() {

        String str = "zxcvbnmkjhgfdsaqwertyuiopQWERTYUOPASDFGHJKLZXCVBNM1234567890";

        Random random = new Random();
        StringBuffer sb = new StringBuffer();

        for (int i = 0; i < 5; ++i) {

            int number = random.nextInt(62);

            sb.append(str.charAt(number));
        }

        return sb.toString();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField PasswordField;
    private javax.swing.JButton backJButton;
    private javax.swing.JTextField bankAccountJTextField;
    private javax.swing.JButton btnMail;
    private javax.swing.JButton createJButton;
    private javax.swing.JComboBox enterpriseJComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JCheckBox minerJCheckBox;
    private javax.swing.JTextField mineridJTextField;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JComboBox networkJComboBox;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtVerificationCode;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables
}
