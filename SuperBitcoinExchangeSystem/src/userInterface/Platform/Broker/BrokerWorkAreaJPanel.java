/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.Platform.Broker;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Employee.Person;
import Business.Enterprise.PlatformEnterprise;
import Business.Organization.BitcoinPlatform.BrokerOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AssignBrokerWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lei
 */
public class BrokerWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form BrokerWorkAreaJPanel
     */
    JPanel userProcessContainer;
    UserAccount account;
    BrokerOrganization brokerOrganization;
    PlatformEnterprise platformEnterprise;
    EcoSystem ecoSystem;

    public BrokerWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, BrokerOrganization brokerOrganization, PlatformEnterprise platformEnterprise, EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.brokerOrganization = brokerOrganization;
        this.platformEnterprise = platformEnterprise;
        this.ecoSystem = ecoSystem;
        populateMessageTable();
        jTabbedPane1.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent e) {
                JTabbedPane tabbedPane = (JTabbedPane) e.getSource();
                int selectedIndex = tabbedPane.getSelectedIndex();
                switch (selectedIndex) {
                    case 0:
                        populateMessageTable();
                        break;
                    case 1:
                        populateCustomerListTable();
                        break;
                }

            }
        });
        brokernameJLabel.setText(account.getPerson().getName());
    }

    public void populateMessageTable() {
        DefaultTableModel model = (DefaultTableModel) workrequesJTable1.getModel();
        model.setRowCount(0);

        for (WorkRequest request : brokerOrganization.getWorkQueue().getWorkRequestList()) {
            if (request instanceof AssignBrokerWorkRequest) {
                if (((AssignBrokerWorkRequest) request).getBroker() == (Employee) account.getPerson()) {
                    Object[] row = new Object[4];
                    row[0] = request;
                    row[1] = request.getSender().getPerson();
                    row[2] = request.getReceiver() == null ? null : request.getReceiver().getPerson().getName();
                    row[3] = request.getStatusString();
                    model.addRow(row);
                }
            }
        }
    }

    public void populateCustomerListTable() {
        DefaultTableModel model = (DefaultTableModel) customerlistJTable.getModel();
        model.setRowCount(0);
        for (WorkRequest request : account.getWorkQueue().getWorkRequestList()) {
            if (request.getStatusString().equals("Assigned")) {
                Object[] row = new Object[4];
                row[0] = request.getSender().getPerson().getId();
                row[1] = request.getSender().getPerson();
                row[2] = request.getSender().getPerson().getLocalBitcoinWallet().size();
                row[3] = request.getSender().getPerson().getWallet().getFlat();
                model.addRow(row);

            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workrequesJTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        customerlistJTable = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        brokernameJLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 102, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        workrequesJTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Customer", "Receiver", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workrequesJTable1);
        if (workrequesJTable1.getColumnModel().getColumnCount() > 0) {
            workrequesJTable1.getColumnModel().getColumn(1).setResizable(false);
        }

        jButton1.setText("Assign to me");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(193, 193, 193)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 597, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(205, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jButton1)
                .addContainerGap(242, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Message", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        customerlistJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Customer Name", "Available Bitcoin", "Available Money"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(customerlistJTable);
        if (customerlistJTable.getColumnModel().getColumnCount() > 0) {
            customerlistJTable.getColumnModel().getColumn(0).setResizable(false);
            customerlistJTable.getColumnModel().getColumn(1).setResizable(false);
            customerlistJTable.getColumnModel().getColumn(2).setResizable(false);
            customerlistJTable.getColumnModel().getColumn(3).setResizable(false);
        }

        jButton2.setText("Select");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(188, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(159, 159, 159))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jButton2)
                .addContainerGap(241, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Customer List", jPanel2);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Broker Working Area");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Broker Name:");

        brokernameJLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        brokernameJLabel.setText("jLabel3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(brokernameJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(370, 370, 370))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(brokernameJLabel)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = workrequesJTable1.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "You should selected one row");
        } else {
            AssignBrokerWorkRequest request = (AssignBrokerWorkRequest) workrequesJTable1.getValueAt(selectedRow, 0);
            if(request.getStatusString().equals("Assigned")){
                JOptionPane.showMessageDialog(null, "You have selected this customer");
            }else{
            request.setReceiver(account);
            request.setStatusString("Assigned");
            account.getWorkQueue().getWorkRequestList().add(request);
            populateMessageTable();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int selectedRow = customerlistJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "You should selected one row");
        } else {
            Person customer = (Person)customerlistJTable.getValueAt(selectedRow, 1);
            TransactionJPanel transactionJPanel = new TransactionJPanel(userProcessContainer, customer, account, platformEnterprise,ecoSystem);
            userProcessContainer.add("transactionJPanel", transactionJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel brokernameJLabel;
    private javax.swing.JTable customerlistJTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable workrequesJTable1;
    // End of variables declaration//GEN-END:variables
}
