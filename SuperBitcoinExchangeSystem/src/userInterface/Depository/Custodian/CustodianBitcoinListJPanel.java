/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.Depository.Custodian;

import Business.EcoSystem;
import Business.Enterprise.DepositoryEnterprise;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Depository.AuthenticationOrganization;
import Business.Organization.Organization;
import Business.Other.Bitcoin;
import Business.WorkQueue.WorkRequest;
import Business.WorkQueue.WritingToCustodianWorkRequest;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author KW
 */
public class CustodianBitcoinListJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustodianBitcoinListJPanel
     */
    private JPanel userProcessContainer;
    private DepositoryEnterprise depositoryEnterprise;
    private HashMap<Bitcoin, Boolean> bitcoinList;
    private AuthenticationOrganization authenticationOrganization;
    private EcoSystem system;

    public CustodianBitcoinListJPanel(JPanel userProcessContainer, DepositoryEnterprise depositoryEnterprise,AuthenticationOrganization authenticationOrganization, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.depositoryEnterprise = depositoryEnterprise;
        this.bitcoinList = depositoryEnterprise.getBitcoinList();
        this.authenticationOrganization = authenticationOrganization;
        lblEnterpriseName.setText(depositoryEnterprise.getName());
        this.system = system;
        
        populateTable();
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblBitcoinList.getModel();
        model.setRowCount(0);
        for(Network network : system.getNetworkList()){
            for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
                for(Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                    if(organization instanceof AuthenticationOrganization){
                        for(WorkRequest request : authenticationOrganization.getWorkQueue().getWorkRequestList()){
                            if(request instanceof WritingToCustodianWorkRequest){
                                if(request.getReceiver() != null){
                                for(Bitcoin b  : ((WritingToCustodianWorkRequest) request).getBitcoins()){
                                    Object[] row = new Object[3];
                                    row[0] = b;
                                    row[1] = b.getPrivateKey();
                                    SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
                                    String dateString = formatter.format(b.getBirthday());
                                    row[2] = dateString;
                                    model.addRow(row);
                }
            }
            }
        }
                    }
                }
            }
        }

//        for (Bitcoin b : bitcoinList.keySet()) {
//            if(bitcoinList.get(b) == true){
//            Object[] row = new Object[3];
//            row[0] = b;
//            row[1] = b.getPrivateKey();
//            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
//            String dateString = formatter.format(b.getBirthday());
//            row[2] = dateString;
//            model.addRow(row);
//            }
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblEnterpriseName = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBitcoinList = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnViewBitcoinDetail = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jlabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jlabel.setText("Enterprise: ");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel4.setText("Bitcoin List");

        lblEnterpriseName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblEnterpriseName.setText("<Enterprise Name>");

        tblBitcoinList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Serial Number", "Private Key", "Mined Date"
            }
        ));
        jScrollPane1.setViewportView(tblBitcoinList);

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnViewBitcoinDetail.setText("View Bitcoin Detail>>");
        btnViewBitcoinDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewBitcoinDetailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(422, 422, 422))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnViewBitcoinDetail)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(140, 140, 140)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(379, 379, 379)
                                .addComponent(jlabel)
                                .addGap(18, 18, 18)
                                .addComponent(lblEnterpriseName, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(btnBack)))
                .addGap(44, 130, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel4)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlabel)
                    .addComponent(lblEnterpriseName))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btnViewBitcoinDetail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(36, 36, 36))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnViewBitcoinDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewBitcoinDetailActionPerformed
        // TODO add your handling code here:
        int row = tblBitcoinList.getSelectedRow();
        if(row < 0){
            JOptionPane.showMessageDialog(null, "Please select a row from the table first.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Bitcoin b = (Bitcoin) tblBitcoinList.getValueAt(row, 0);
        CustodianBitcoinDetailJPanel cbdjp = new CustodianBitcoinDetailJPanel(userProcessContainer, b);
        userProcessContainer.add("cbdjp", cbdjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnViewBitcoinDetailActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnViewBitcoinDetail;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jlabel;
    private javax.swing.JLabel lblEnterpriseName;
    private javax.swing.JTable tblBitcoinList;
    // End of variables declaration//GEN-END:variables
}
