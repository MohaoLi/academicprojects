/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.Depository.Recorder;

import Business.EcoSystem;
import Business.Enterprise.DepositoryEnterprise;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Depository.RecordsOrganization;
import Business.Other.Bitcoin;
import Business.Other.ExchangeHistory;
import Business.UserAccount.UserAccount;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lei
 */
public class RecorderWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RecorderWorkAreaJPanel
     */
    JPanel userProcessContainer;
    UserAccount account;
    RecordsOrganization recordsOrganization;
    DepositoryEnterprise depositoryEnterprise;
    EcoSystem ecoSystem;

    public RecorderWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, RecordsOrganization recordsOrganization, DepositoryEnterprise depositoryEnterprise, EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.recordsOrganization = recordsOrganization;
        this.depositoryEnterprise = depositoryEnterprise;
        this.ecoSystem = ecoSystem;
        populateTable();
    }

    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) tblTransactionHistory.getModel();
        model.setRowCount(0);

        for(Network network : ecoSystem.getNetworkList()){
            for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
                if(enterprise instanceof DepositoryEnterprise){
                    DepositoryEnterprise dEnterprise = (DepositoryEnterprise) enterprise;
                    for(Bitcoin bitcoin : dEnterprise.getBitcoinList().keySet()){
                        for(ExchangeHistory eh : bitcoin.getExchangeHistoryList()){
                            Object[] row = new Object[5];
                            row[0] = bitcoin;
                            row[1] = eh.getSeller();
                            row[2] = eh.getBuyer();
                            row[3] = eh.getDate();
                            row[4] = eh.getExchangePrize();
                            model.addRow(row);
                        }
                    }
                }
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTransactionHistory = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setText("Recorder Work Area");

        tblTransactionHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Serial Number", "Seller", "Buyer", "Date", "Exchange Prize"
            }
        ));
        jScrollPane1.setViewportView(tblTransactionHistory);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(169, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(361, 361, 361))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 705, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(126, 126, 126))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1)
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(280, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTransactionHistory;
    // End of variables declaration//GEN-END:variables
}
